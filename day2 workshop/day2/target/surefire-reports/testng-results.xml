<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="20" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-06T16:47:39 SGT" name="Surefire suite" finished-at="2021-12-06T16:47:39 SGT" duration-ms="145">
    <groups>
    </groups>
    <test started-at="2021-12-06T16:47:39 SGT" name="Surefire test" finished-at="2021-12-06T16:47:39 SGT" duration-ms="145">
      <class name="ibf2021.d2.TestFixedAccount">
        <test-method is-config="true" signature="setUpStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="setUpStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpStreams -->
        <test-method signature="testDeposit_cons1()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testDeposit_cons1" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeposit_cons1 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testDeposit_cons2()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testDeposit_cons2" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeposit_cons2 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testDeposit_cons3()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testDeposit_cons3" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeposit_cons3 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testDurationChange_cons1()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testDurationChange_cons1" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Maximum number of changes reached.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Maximum number of changes reached.
at ibf2021.d2.FixedDepositAccount.setDuration(FixedDepositAccount.java:89)
at ibf2021.d2.TestFixedAccount.testDurationChange_cons1(TestFixedAccount.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDurationChange_cons1 -->
        <test-method signature="testDurationChange_cons2()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testDurationChange_cons2" finished-at="2021-12-06T16:47:39 SGT" duration-ms="29" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Maximum number of changes reached.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Maximum number of changes reached.
at ibf2021.d2.FixedDepositAccount.setDuration(FixedDepositAccount.java:89)
at ibf2021.d2.TestFixedAccount.testDurationChange_cons2(TestFixedAccount.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDurationChange_cons2 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testDurationChange_cons3()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testDurationChange_cons3" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Maximum number of changes reached.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Maximum number of changes reached.
at ibf2021.d2.FixedDepositAccount.setDuration(FixedDepositAccount.java:89)
at ibf2021.d2.TestFixedAccount.testDurationChange_cons3(TestFixedAccount.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDurationChange_cons3 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testInterestChange_cons1()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testInterestChange_cons1" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Maximum number of changes reached.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Maximum number of changes reached.
at ibf2021.d2.FixedDepositAccount.setInterest(FixedDepositAccount.java:71)
at ibf2021.d2.TestFixedAccount.testInterestChange_cons1(TestFixedAccount.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterestChange_cons1 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testInterestChange_cons2()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testInterestChange_cons2" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Maximum number of changes reached.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Maximum number of changes reached.
at ibf2021.d2.FixedDepositAccount.setInterest(FixedDepositAccount.java:71)
at ibf2021.d2.TestFixedAccount.testInterestChange_cons2(TestFixedAccount.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterestChange_cons2 -->
        <test-method signature="testInterestChange_cons3()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testInterestChange_cons3" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Maximum number of changes reached.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Maximum number of changes reached.
at ibf2021.d2.FixedDepositAccount.setInterest(FixedDepositAccount.java:71)
at ibf2021.d2.TestFixedAccount.testInterestChange_cons3(TestFixedAccount.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterestChange_cons3 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testWithdraw_cons1()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testWithdraw_cons1" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw_cons1 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testWithdraw_cons2()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testWithdraw_cons2" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw_cons2 -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method is-config="true" signature="restoreStreams()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="restoreStreams" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restoreStreams -->
        <test-method signature="testWithdraw_cons3()[pri:0, instance:ibf2021.d2.TestFixedAccount@51e2adc7]" started-at="2021-12-06T16:47:39 SGT" name="testWithdraw_cons3" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw_cons3 -->
      </class> <!-- ibf2021.d2.TestFixedAccount -->
      <class name="ibf2021.d2.TestBankAccount">
        <test-method is-config="true" signature="createObjects()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="createObjects" finished-at="2021-12-06T16:47:39 SGT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createObjects -->
        <test-method signature="testDeposit_nameOnly_NormalCondition()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testDeposit_nameOnly_NormalCondition" finished-at="2021-12-06T16:47:39 SGT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeposit_nameOnly_NormalCondition -->
        <test-method signature="testDeposit_nameandBalance_NormalCondition()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testDeposit_nameandBalance_NormalCondition" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeposit_nameandBalance_NormalCondition -->
        <test-method signature="testTransactionHistory_nameAndBalance()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testTransactionHistory_nameAndBalance" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionHistory_nameAndBalance -->
        <test-method signature="testTransactionHistory_nameOnly()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testTransactionHistory_nameOnly" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionHistory_nameOnly -->
        <test-method signature="testWithdraw_nameAndBalance_NormalCondition()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testWithdraw_nameAndBalance_NormalCondition" finished-at="2021-12-06T16:47:39 SGT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw_nameAndBalance_NormalCondition -->
        <test-method signature="testWithdraw_nameOnly_NormalCondition()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testWithdraw_nameOnly_NormalCondition" finished-at="2021-12-06T16:47:39 SGT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw_nameOnly_NormalCondition -->
        <test-method signature="testgetBalance_nameAndBalance()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testgetBalance_nameAndBalance" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetBalance_nameAndBalance -->
        <test-method signature="testgetBalance_nameOnly()[pri:0, instance:ibf2021.d2.TestBankAccount@6f195bc3]" started-at="2021-12-06T16:47:39 SGT" name="testgetBalance_nameOnly" finished-at="2021-12-06T16:47:39 SGT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetBalance_nameOnly -->
      </class> <!-- ibf2021.d2.TestBankAccount -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
